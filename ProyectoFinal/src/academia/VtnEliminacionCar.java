package academia;


import arbolesylistas.GuardaArchivos;
import arbolesylistas.Multilistas;
import static arbolesylistas.Multilistas.busca;
import arbolesylistas.Nodo;
import arbolesylistas.TablasHash;
import cjb.ci.CtrlInterfaz;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ItemEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/**
 *
 * @author Daniel Castrejon
 */
public class VtnEliminacionCar extends javax.swing.JFrame
{

    String label[] = new String[2];

    /**
     * Creates new form VtnEliminacionCar
     */
    public VtnEliminacionCar()
    {
        initComponents();
        actualizarUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        eliminacionPanel = new FondoPanelp();
        elimLabel = new javax.swing.JLabel();
        elimButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        carElimComboBox = new javax.swing.JComboBox<>();
        insLabel = new javax.swing.JLabel();
        insComboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eliminar Carrera");
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        eliminacionPanel.setBackground(new java.awt.Color(30, 49, 106));

        elimLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        elimLabel.setForeground(new java.awt.Color(255, 255, 255));
        elimLabel.setText("Carrera");

        elimButton.setText("Eliminar");
        elimButton.setEnabled(false);
        elimButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                elimButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Eliminar carrera");

        carElimComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        carElimComboBox.setEnabled(false);
        carElimComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                carElimComboBoxItemStateChanged(evt);
            }
        });

        insLabel.setForeground(new java.awt.Color(255, 255, 255));
        insLabel.setText("Institucion");

        insComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        insComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                insComboBoxItemStateChanged(evt);
            }
        });

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout eliminacionPanelLayout = new javax.swing.GroupLayout(eliminacionPanel);
        eliminacionPanel.setLayout(eliminacionPanelLayout);
        eliminacionPanelLayout.setHorizontalGroup(
            eliminacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eliminacionPanelLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(eliminacionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eliminacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(eliminacionPanelLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(elimButton))
                    .addGroup(eliminacionPanelLayout.createSequentialGroup()
                        .addGroup(eliminacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(elimLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insLabel))
                        .addGap(9, 9, 9)
                        .addGroup(eliminacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carElimComboBox, 0, 245, Short.MAX_VALUE)
                            .addComponent(insComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        eliminacionPanelLayout.setVerticalGroup(
            eliminacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eliminacionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(28, 28, 28)
                .addGroup(eliminacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insLabel)
                    .addComponent(insComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(eliminacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carElimComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elimLabel))
                .addGap(34, 34, 34)
                .addGroup(eliminacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elimButton)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eliminacionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eliminacionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void elimButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_elimButtonActionPerformed
    {//GEN-HEADEREND:event_elimButtonActionPerformed
        try
        {
            if (carElimComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione") || carElimComboBox.getSelectedItem().toString().equalsIgnoreCase(""))
            {
                JOptionPane.showMessageDialog(null, "Opcion Invalida");
            } else
            {
                String etiqueta1[] = new String[2];
                etiqueta1[0] = insComboBox.getSelectedItem().toString();
                etiqueta1[1] = carElimComboBox.getSelectedItem().toString();
                Nodo aux = buscar(VentanaP.raiz,0,etiqueta1);
                VentanaP.rHash=TablasHash.elimina(VentanaP.rHash, aux.getEtiqueta().toLowerCase(), aux);
                VentanaP.s = Multilistas.elimina(VentanaP.raiz, 0, etiqueta1);
                VentanaP.raiz = VentanaP.s[0];
                if (VentanaP.s[1] == null)
                {
                    JOptionPane.showMessageDialog(null, "Carrera no encontrada");

                } else
                {
                    JOptionPane.showMessageDialog(null, "Carrera eliminada");
                }
                carElimComboBox.removeAllItems();
                carElimComboBox.addItem("Seleccione");
                UpdateUI(VentanaP.raiz, UpdateLabel(insComboBox.getSelectedItem().toString()), 0);
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "ERROR");
        }
    }//GEN-LAST:event_elimButtonActionPerformed

    private void insComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_insComboBoxItemStateChanged
    {//GEN-HEADEREND:event_insComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            if (insComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione") || insComboBox.getSelectedItem().toString().equalsIgnoreCase(""))
            {
                JOptionPane.showMessageDialog(null, "Opcion Invalida");
                carElimComboBox.removeAllItems();
                carElimComboBox.addItem("Seleccione");
                carElimComboBox.setEnabled(false);
            } else
            {
                CtrlInterfaz.cambia(carElimComboBox);
                Nodo aux = Multilistas.busca(VentanaP.raiz, insComboBox.getSelectedItem().toString());
                carElimComboBox.removeAllItems();
                carElimComboBox.addItem("Seleccione");
                UpdateUI(aux, UpdateLabel(aux.getEtiqueta()), 0);
            }
        }
    }//GEN-LAST:event_insComboBoxItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        VentanaP v = new VentanaP();
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void carElimComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_carElimComboBoxItemStateChanged
    {//GEN-HEADEREND:event_carElimComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            if (carElimComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione") || carElimComboBox.getSelectedItem().toString().equalsIgnoreCase(""))
            {
                elimButton.setEnabled(false);
            } else
            {
                CtrlInterfaz.cambia(elimButton);
            }
        }
    }//GEN-LAST:event_carElimComboBoxItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        VentanaP v = new VentanaP();
        v.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    public String desp0(Nodo raiz, int nivel)
    {
        String s = "";
        if (raiz != null)
        {
            s = raiz.getEtiqueta();
            insComboBox.addItem(s);
            desp0(raiz.getSig(), 0);
        }
        return s;
    }

    public void actualizarUI()
    {
        GuardaArchivos.guardar(VentanaP.raiz, "Multilista.dat");
        desp0(VentanaP.raiz, 0);

    }

    public void UpdateUI(Nodo raiz, String[] etiqueta, int nivel)
    {
        if (nivel == etiqueta.length - 1)
        {
            Nodo aux = raiz;
            String s = "";
            while (aux != null)
            {
                s = aux.getEtiqueta();
                carElimComboBox.addItem(s);
                aux = aux.getSig();
            }
        } else
        {
            Nodo aux = busca(raiz, etiqueta[nivel]);
            if (aux == null)
            {
                JOptionPane.showMessageDialog(this, "No hay carrera en la institucion seleccionada");

            }
            UpdateUI(aux.getAbj(), etiqueta, nivel + 1);
        }
    }

    public String[] UpdateLabel(String etq)
    {
        label[0] = etq;
        label[1] = "";
        return label;
    }

    public static Nodo buscar(Nodo raiz, int nivel, String[] etiqueta)
    {
        if (nivel == etiqueta.length - 1)
        {
            Nodo aux1 = busca(raiz, etiqueta[nivel]);
            if (aux1 != null)
            {
                System.out.println(aux1.getEtiqueta());
            }
            return aux1;
        } else
        {
            Nodo aux = busca(raiz, etiqueta[nivel]);
            if (aux == null)
            {
                System.out.println("No encontre el dato: " + etiqueta[nivel] + " del nivel " + nivel);
                return raiz;
            } else
            {

                return buscar(aux.getAbj(), nivel + 1, etiqueta);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VtnEliminacionCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VtnEliminacionCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VtnEliminacionCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VtnEliminacionCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new VtnEliminacionCar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> carElimComboBox;
    private javax.swing.JButton elimButton;
    private javax.swing.JLabel elimLabel;
    private javax.swing.JPanel eliminacionPanel;
    private javax.swing.JComboBox<String> insComboBox;
    private javax.swing.JLabel insLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    // End of variables declaration//GEN-END:variables
class FondoPanelg extends JPanel
    {

        private Image imagen;

        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondog.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    class FondoPanelp extends JPanel
    {

        private Image imagen;

        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondop.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
        //color tecnm azul [30,49,106]
        //  new FondoPanelp()
    }
}
