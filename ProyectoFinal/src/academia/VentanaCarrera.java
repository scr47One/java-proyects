package academia;

import arbolesylistas.ArbolBinario;
import arbolesylistas.Carrera;
import arbolesylistas.Multilistas;
import static arbolesylistas.Multilistas.busca;
import arbolesylistas.Nodo;
import arbolesylistas.NodoArbol;
import arbolesylistas.TablasHash;
import cjb.ci.CtrlInterfaz;
import cjb.ci.Validaciones;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ItemEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Daniel Alberto Hernandez Castrejon
 * @author Humberto Gonzalez Gardu√±o
 * @author Oscar Lopez Fonseca
 */
public class VentanaCarrera extends javax.swing.JFrame
{

    public static String car = "";
    String label[] = new String[2];

    /**
     * Creates new form VentanaCarrera
     */
    public VentanaCarrera()
    {
        initComponents();
        datosPanel.setVisible(true);
        actualizarUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new FondoPanelg();
        jLabel1 = new javax.swing.JLabel();
        carComboBox = new javax.swing.JComboBox<>();
        datosPanel = new FondoPanelp();
        claveLabel = new javax.swing.JLabel();
        claveTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nombreTextField = new javax.swing.JTextField();
        jefeTextField = new javax.swing.JTextField();
        aceptarButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("INGENIERIAS");
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel1.setText("Instituciones");

        carComboBox.setForeground(new java.awt.Color(30, 49, 106));
        carComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        carComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                carComboBoxItemStateChanged(evt);
            }
        });
        carComboBox.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                carComboBoxMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                carComboBoxMousePressed(evt);
            }
        });
        carComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                carComboBoxActionPerformed(evt);
            }
        });

        datosPanel.setBackground(new java.awt.Color(30, 49, 106));

        claveLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        claveLabel.setForeground(new java.awt.Color(255, 255, 255));
        claveLabel.setText("CLAVE DE CARRERA");

        claveTextField.setEnabled(false);
        claveTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                claveTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                claveTextFieldKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("INGENIERIA EN");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("JEFE DE CARRERA");

        nombreTextField.setEnabled(false);
        nombreTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                nombreTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                nombreTextFieldKeyTyped(evt);
            }
        });

        jefeTextField.setEnabled(false);
        jefeTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jefeTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jefeTextFieldKeyTyped(evt);
            }
        });

        aceptarButton.setText("Aceptar");
        aceptarButton.setEnabled(false);
        aceptarButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aceptarButtonActionPerformed(evt);
            }
        });
        aceptarButton.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                aceptarButtonKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Agregar carrera");

        jButton1.setText("Borrar todo");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datosPanelLayout = new javax.swing.GroupLayout(datosPanel);
        datosPanel.setLayout(datosPanelLayout);
        datosPanelLayout.setHorizontalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datosPanelLayout.createSequentialGroup()
                        .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(claveLabel))
                        .addGap(12, 12, 12)
                        .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(claveTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(nombreTextField)
                            .addComponent(jefeTextField))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(datosPanelLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aceptarButton)
                        .addGap(26, 26, 26))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosPanelLayout.createSequentialGroup()
                .addContainerGap(157, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );
        datosPanelLayout.setVerticalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(claveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(claveLabel))
                .addGap(28, 28, 28)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jefeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptarButton)
                    .addComponent(jButton1))
                .addGap(4, 4, 4))
        );

        cancelarButton.setText("Atr√°s");
        cancelarButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(datosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(cancelarButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(carComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(datosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelarButtonActionPerformed
    {//GEN-HEADEREND:event_cancelarButtonActionPerformed
        VentanaP v = new VentanaP();
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void aceptarButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_aceptarButtonActionPerformed
    {//GEN-HEADEREND:event_aceptarButtonActionPerformed
        try
        {
            if (!claveTextField.getText().isEmpty() && !nombreTextField.getText().isEmpty() && !jefeTextField.getText().isEmpty())
            {
                String cve = claveTextField.getText();
                String nom = nombreTextField.getText();
                String boss = jefeTextField.getText();

                Object objCar = new Carrera(Integer.parseInt(cve), nom, boss);
                //CREACION DE NODOLISTA
                Nodo c = new Nodo(objCar, nombreTextField.getText());
                String etiqueta[] = new String[2];
                etiqueta[0] = carComboBox.getSelectedItem().toString();
                etiqueta[1] = nombreTextField.getText();
                Nodo n1 = buscar(VentanaP.raiz, 0, etiqueta);
                Nodo ex = buscar(VentanaP.raiz, 0, etiqueta);
                Nodo aux = Multilistas.busca(VentanaP.raiz, etiqueta[0]);
                if (n1 != null && ex != null)
                {
                    if (n1.getEtiqueta().equalsIgnoreCase(ex.getEtiqueta()))
                    {
                        JOptionPane.showMessageDialog(null, "Carrera ya resgistrada con el mismo nombre");
                        CtrlInterfaz.cambia(nombreTextField);
                    } else
                    {
                        VentanaP.raiz = Multilistas.insertar(VentanaP.raiz, c, 0, etiqueta, aux);
                        //insercion en el arbol
                        NodoArbol ca = new NodoArbol(c.getEtiqueta().toLowerCase());
                        ca.setHilo(c);
                        VentanaP.rHash = TablasHash.inserta(VentanaP.rHash, ca, n1);
                        JOptionPane.showMessageDialog(null, "Carrera agregada");
                        agregarOtra();
                    }
                } else
                {
                    VentanaP.raiz = Multilistas.insertar(VentanaP.raiz, c, 0, etiqueta, aux);
                    //insercion en el arbol
                    NodoArbol ca = new NodoArbol(c.getEtiqueta().toLowerCase());
                    ca.setHilo(c);
                    VentanaP.rHash = TablasHash.inserta(VentanaP.rHash, ca, n1);
                    JOptionPane.showMessageDialog(null, "Carrera agregada");
                    agregarOtra();
                }
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, " Error !!!\n" + " Intente de nuevo");

        }
    }//GEN-LAST:event_aceptarButtonActionPerformed

    private void aceptarButtonKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_aceptarButtonKeyPressed
    {//GEN-HEADEREND:event_aceptarButtonKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            aceptarButtonActionPerformed(null);
        }
    }//GEN-LAST:event_aceptarButtonKeyPressed

    private void carComboBoxMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_carComboBoxMouseClicked
    {//GEN-HEADEREND:event_carComboBoxMouseClicked

    }//GEN-LAST:event_carComboBoxMouseClicked

    private void carComboBoxMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_carComboBoxMousePressed
    {//GEN-HEADEREND:event_carComboBoxMousePressed
    }//GEN-LAST:event_carComboBoxMousePressed

    private void claveTextFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_claveTextFieldKeyTyped
    {//GEN-HEADEREND:event_claveTextFieldKeyTyped
        //Validaciones.validaEntero(evt);
        Validaciones.validaEntero(evt, 6, claveTextField.getText());
    }//GEN-LAST:event_claveTextFieldKeyTyped

    private void claveTextFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_claveTextFieldKeyPressed
    {//GEN-HEADEREND:event_claveTextFieldKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (validarCVacio(claveTextField))
            {
                if (validarLongitud(6, claveTextField))
                {
                    CtrlInterfaz.cambia(nombreTextField);
                     CtrlInterfaz.habilita(false, claveTextField);
                } else
                {
                    JOptionPane.showMessageDialog(this, "¬°Error! \nLa clave de Carrera debe contener 6 digitos", "ATENCION", JOptionPane.WARNING_MESSAGE);
                }
            } else
            {
                JOptionPane.showMessageDialog(this, "No puede dejar este campo vacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
                claveTextField.requestFocus();
            }
        }
    }//GEN-LAST:event_claveTextFieldKeyPressed

    private void carComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_carComboBoxItemStateChanged
    {//GEN-HEADEREND:event_carComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            if (carComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione") || carComboBox.getSelectedItem().toString().equalsIgnoreCase(""))
            {
                JOptionPane.showMessageDialog(null, "Seleccione una institucion\npara agregar carrera", "IMPORTANTE", JOptionPane.INFORMATION_MESSAGE);
                claveTextField.setEnabled(false);
            } else
            {
                CtrlInterfaz.cambia(claveTextField);
            }
        }
    }//GEN-LAST:event_carComboBoxItemStateChanged

    private void nombreTextFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_nombreTextFieldKeyTyped
    {//GEN-HEADEREND:event_nombreTextFieldKeyTyped
        Validaciones.validaAlfabeticos(evt);
    }//GEN-LAST:event_nombreTextFieldKeyTyped

    private void nombreTextFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_nombreTextFieldKeyPressed
    {//GEN-HEADEREND:event_nombreTextFieldKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (validarCVacio(nombreTextField))
            {
                char a = nombreTextField.getText().charAt(0);
                if (a == '√ë' || a == '√±')
                {
                    JOptionPane.showMessageDialog(this, "No se permite empezar con la letra √ë o √±", "ATENCION", JOptionPane.WARNING_MESSAGE);
                    nombreTextField.requestFocus();
                } else
                {
                    if (validaEspacio(nombreTextField))
                    {
                        CtrlInterfaz.cambia(jefeTextField);
                        CtrlInterfaz.habilita(false, nombreTextField);
                    } else
                    {
                        nombreTextField.requestFocus();
                    }
                }
            } else
            {
                JOptionPane.showMessageDialog(this, "No puede dejar este campo vacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
                nombreTextField.requestFocus();
            }
        }
    }//GEN-LAST:event_nombreTextFieldKeyPressed

    private void jefeTextFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jefeTextFieldKeyTyped
    {//GEN-HEADEREND:event_jefeTextFieldKeyTyped
        Validaciones.validaAlfabeticos(evt);
    }//GEN-LAST:event_jefeTextFieldKeyTyped

    private void jefeTextFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jefeTextFieldKeyPressed
    {//GEN-HEADEREND:event_jefeTextFieldKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (validarCVacio(jefeTextField))
            {
                if (validaEspacio(jefeTextField))
                {
                    int opc = JOptionPane.showConfirmDialog(this, "¬ø DESEA REALIZAR MODIFICACIONES ?", "ATENCION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (opc == JOptionPane.NO_OPTION)
                    {
                        CtrlInterfaz.cambia(aceptarButton);
                        CtrlInterfaz.habilita(false, jefeTextField);
                    } else
                    {
                        CtrlInterfaz.cambia(claveTextField);
                        CtrlInterfaz.habilita(false, jefeTextField);
                    }
                } else
                {
                    jefeTextField.requestFocus();
                }
            } else
            {
                JOptionPane.showMessageDialog(this, "No puede dejar este campo vacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
                jefeTextField.requestFocus();
            }
        }
    }//GEN-LAST:event_jefeTextFieldKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        VentanaP v = new VentanaP();
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        claveTextField.setText("");
        CtrlInterfaz.habilita(false, nombreTextField);
        claveTextField.requestFocus();
        nombreTextField.setText("");
        CtrlInterfaz.habilita(false, jefeTextField);
        CtrlInterfaz.habilita(false, aceptarButton);
        CtrlInterfaz.cambia(claveTextField);
        jefeTextField.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void carComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_carComboBoxActionPerformed
    {//GEN-HEADEREND:event_carComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carComboBoxActionPerformed
//    

    public static Nodo buscar(Nodo raiz, int nivel, String[] etiqueta)
    {
        if (nivel == etiqueta.length - 1)
        {
            Nodo aux1 = busca(raiz, etiqueta[nivel]);
            if (aux1 != null)
            {
                System.out.println("Lo encontre: " + aux1.getEtiqueta());
            }
            return aux1;
        } else
        {
            Nodo aux = busca(raiz, etiqueta[nivel]);
            if (aux == null)
            {
                System.out.println("No encontre el dato: " + etiqueta[nivel] + " del nivel " + nivel);
                return raiz;
            } else
            {
                return buscar(aux.getAbj(), nivel + 1, etiqueta);
            }
        }
    }

    public NodoArbol balanceo(NodoArbol raiz)
    {
        ArbolBinario ab = new ArbolBinario();
        return ab.balancear(raiz);
    }

    public String desp0(Nodo raiz, int nivel)
    {
        String s = "";
        if (raiz != null)
        {
            s = raiz.getEtiqueta();
            carComboBox.addItem(s);
            desp0(raiz.getSig(), 0);
        }
        return s;
    }

    public void actualizarUI()
    {
//        GuardaArchivos.guardar(VentanaP.raiz, "Multilista.dat");
//        GuardaArchivos.guardar(VentanaP.rHash, "TablaArbol.dat");
        desp0(VentanaP.raiz, 0);

    }

    public boolean validarCVacio(JTextField textField)
    {
        if (textField.getText().isEmpty())
        {
            return false;
        } else
        {
            return true;
        }
    }

    public boolean validarLongitud(int len, JTextField textField)
    {
        if (textField.getText().length() < len)
        {
            return false;
        } else
        {
            return true;
        }
    }

    public void agregarOtra()
    {
        int opc = JOptionPane.showConfirmDialog(this, "¬ø Desea agregar mas carreras ?", "Importante", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (opc == JOptionPane.YES_OPTION)
        {
            nombreTextField.setText("");
            claveTextField.setText("");
            jefeTextField.setText("");
            CtrlInterfaz.habilita(false, nombreTextField);
//            CtrlInterfaz.habilita(false, claveTextField);
            CtrlInterfaz.habilita(false, jefeTextField);
            CtrlInterfaz.cambia(carComboBox);
        } else
        {
            VentanaP v = new VentanaP();
            v.setVisible(true);
            this.dispose();
        }
    }

    public boolean validaEspacio(JTextField jtextfield)
    {
        char arr[] = jtextfield.getText().toCharArray();
        int cont = -1;
        char b = ' ';
        int i = 0;
        if (jtextfield.getText().charAt(0) == b)
        {
            JOptionPane.showMessageDialog(this, "No puede inicar con espacio o dejar solo el espacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
            return false;
        } else
        {
            do
            {
                if (arr[i] == b)
                {
                    cont += 1;
                    if (i == arr.length - 1)
                    {
                        if (arr[i] == b)
                        {
                            JOptionPane.showMessageDialog(this, "No puede terminar con un espacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
                            return false;
                        }
                    }
                    if (cont == 1)
                    {
                        JOptionPane.showMessageDialog(this, "No puede tener mas de 1 espacio antes de otra palabra", "ATENCION", JOptionPane.WARNING_MESSAGE);
                        return false;
                    }
                } else
                {
                    cont = -1;
                }
                i++;
            } while (i < arr.length);
            return true;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Windows".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VentanaCarrera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VentanaCarrera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VentanaCarrera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VentanaCarrera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new VentanaCarrera().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JComboBox<String> carComboBox;
    private javax.swing.JLabel claveLabel;
    private javax.swing.JTextField claveTextField;
    private javax.swing.JPanel datosPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jefeTextField;
    private javax.swing.JTextField nombreTextField;
    // End of variables declaration//GEN-END:variables
class FondoPanelg extends JPanel
    {

        private Image imagen;

        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondog.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    class FondoPanelp extends JPanel
    {

        private Image imagen;

        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondop.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
        //color tecnm azul [30,49,106]
        //  new FondoPanelp()
    }
}
