package academia;

import static academia.VentanaCarrera.buscar;
import arbolesylistas.ArbolBinario;
import arbolesylistas.Carrera;
import arbolesylistas.GuardaArchivos;
import arbolesylistas.Multilistas;
import static arbolesylistas.Multilistas.busca;
import arbolesylistas.Nodo;
import arbolesylistas.NodoArbol;
import arbolesylistas.TablasHash;
import cjb.ci.CtrlInterfaz;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ItemEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Daniel Alberto Hernandez Castrejon
 * @author Humberto Gonzalez Garduño
 * @author Oscar Lopez Fonseca
 */
public class VentanaCambio extends javax.swing.JFrame
{

    String label[] = new String[2];
    public static String tecAct = "";
    public static String tecDes = "";

    /**
     * Creates new form VentanaCambio
     */
    public VentanaCambio()
    {
        initComponents();
        actualizarUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new FondoPanelg();
        carreraComboBox = new javax.swing.JComboBox<>();
        tecDesComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tecActualLabel = new javax.swing.JLabel();
        cambiarButton = new javax.swing.JButton();
        tecActComboBox = new javax.swing.JComboBox<>();
        dataPanel2 = new FondoPanelp();
        cvaLabel = new javax.swing.JLabel();
        cvaTextField = new javax.swing.JTextField();
        nomLabel = new javax.swing.JLabel();
        nomTextField = new javax.swing.JTextField();
        bossLabel = new javax.swing.JLabel();
        bossTextField = new javax.swing.JTextField();
        nvoTecLabel = new javax.swing.JLabel();
        tecActTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        carreraComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        carreraComboBox.setEnabled(false);
        carreraComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                carreraComboBoxItemStateChanged(evt);
            }
        });
        jPanel1.add(carreraComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 140, -1));

        tecDesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        tecDesComboBox.setEnabled(false);
        tecDesComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                tecDesComboBoxItemStateChanged(evt);
            }
        });
        tecDesComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tecDesComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(tecDesComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 217, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setText("CARRERA");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 87, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel6.setText("TECNOLÓGICO DESTINO");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 180, -1));

        tecActualLabel.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tecActualLabel.setText("TECNOLOGICO ACTUAL");
        jPanel1.add(tecActualLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 126, -1));

        cambiarButton.setBackground(new java.awt.Color(255, 255, 255));
        cambiarButton.setText("Cambiar");
        cambiarButton.setEnabled(false);
        cambiarButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cambiarButtonActionPerformed(evt);
            }
        });
        cambiarButton.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                cambiarButtonKeyPressed(evt);
            }
        });
        jPanel1.add(cambiarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, -1, -1));

        tecActComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        tecActComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                tecActComboBoxItemStateChanged(evt);
            }
        });
        tecActComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tecActComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(tecActComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 190, -1));

        cvaLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        cvaLabel.setForeground(new java.awt.Color(255, 255, 255));
        cvaLabel.setText("CLAVE");

        cvaTextField.setEnabled(false);

        nomLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        nomLabel.setForeground(new java.awt.Color(255, 255, 255));
        nomLabel.setText("INGENIERIA EN");

        nomTextField.setEnabled(false);
        nomTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nomTextFieldActionPerformed(evt);
            }
        });

        bossLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        bossLabel.setForeground(new java.awt.Color(255, 255, 255));
        bossLabel.setText("JEFE");

        bossTextField.setEnabled(false);

        nvoTecLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        nvoTecLabel.setForeground(new java.awt.Color(255, 255, 255));
        nvoTecLabel.setText("NUEVO TECNOLOGICO");

        tecActTextField.setEnabled(false);

        javax.swing.GroupLayout dataPanel2Layout = new javax.swing.GroupLayout(dataPanel2);
        dataPanel2.setLayout(dataPanel2Layout);
        dataPanel2Layout.setHorizontalGroup(
            dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataPanel2Layout.createSequentialGroup()
                        .addComponent(cvaLabel)
                        .addGap(138, 138, 138)
                        .addComponent(cvaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dataPanel2Layout.createSequentialGroup()
                        .addComponent(nvoTecLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(tecActTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dataPanel2Layout.createSequentialGroup()
                        .addGroup(dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bossLabel)
                            .addComponent(nomLabel))
                        .addGap(94, 94, 94)
                        .addGroup(dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bossTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(54, 54, 54))
        );
        dataPanel2Layout.setVerticalGroup(
            dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cvaLabel)
                    .addComponent(cvaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(nomLabel))
                    .addGroup(dataPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(nomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bossLabel)
                    .addComponent(bossTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(dataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nvoTecLabel)
                    .addComponent(tecActTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(dataPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 530, 170));

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tecActComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tecActComboBoxActionPerformed
    {//GEN-HEADEREND:event_tecActComboBoxActionPerformed

    }//GEN-LAST:event_tecActComboBoxActionPerformed

    private void cambiarButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cambiarButtonActionPerformed
    {//GEN-HEADEREND:event_cambiarButtonActionPerformed
        try
        {
            String etiqueta1[] = new String[2];
            etiqueta1[0] = tecAct;
            etiqueta1[1] = carreraComboBox.getSelectedItem().toString();
            Nodo aux2 = buscar(VentanaP.raiz, 0, etiqueta1);
            //EXTRAER EL ARBOL DE LA POSICION INDICADA EN LA TABLA HASH
            ArbolBinario ab = new ArbolBinario();
            ab = TablasHash.buscar(VentanaP.rHash, aux2.getEtiqueta(), null);
            ArbolBinario abc = new ArbolBinario();
            //NODOARBOL QUE CONTIENE EN SU HILO EL NODOLISTA BUSCADO
            NodoArbol nab = null;
            nab = abc.buscar(ab.getRaiz(), aux2.getEtiqueta().toLowerCase(), 0, aux2, nab);
            VentanaP.s = Multilistas.elimina(VentanaP.raiz, 0, etiqueta1);
            VentanaP.raiz = VentanaP.s[0];
            if (VentanaP.s[1] == null)
            {
                JOptionPane.showMessageDialog(null, "Datos no válidos");

            } else
            {
                Nodo c = VentanaP.s[1];
                String etiqueta[] = new String[2];
                etiqueta[0] = tecDes;
                etiqueta[1] = carreraComboBox.getSelectedItem().toString();
                Nodo n1 = buscar(VentanaP.raiz, 0, etiqueta);
                //Nodo ex = buscarRepetidos(VentanaP.raiz, 0, etiqueta);
                Nodo aux = Multilistas.busca(VentanaP.raiz, etiqueta1[0]);
                Nodo aux1 = Multilistas.busca(VentanaP.raiz, etiqueta[0]);
                if (n1 != null)
                {
                    if (n1.getEtiqueta().equalsIgnoreCase(c.getEtiqueta()))
                    {
                        VentanaP.raiz = Multilistas.insertar(VentanaP.raiz, c, 0, etiqueta1, aux);
                        //SE QUEDA CON EL MISMO HILO
                        nab.setHilo(null);
                        nab.setHilo(c);
//                        tecActTextField.setText("Permanecio en la institucion: "+tecAct);
                        System.out.println("Conector arriba: " + c.getArb().getEtiqueta());
                        tecDesComboBox.removeAllItems();
                        tecDesComboBox.addItem("Seleccione");
                        tecActComboBox.removeAllItems();
                        tecActComboBox.addItem("Seleccione");
                        JOptionPane.showMessageDialog(null, "Cambio no realizado, carrera ya registrada con ese nombre");
                        actualizarUI();
                    } else
                    {
                        VentanaP.raiz = Multilistas.insertar(VentanaP.raiz, c, 0, etiqueta, aux1);
                        //SE CAMBIA EL HILO
                        nab.setHilo(null);
                        nab.setHilo(c);
                        tecActTextField.setText(tecDes);
                        System.out.println("Conector arriba: " + c.getArb().getEtiqueta());
                        tecDesComboBox.removeAllItems();
                        tecDesComboBox.addItem("Seleccione");
                        tecActComboBox.removeAllItems();
                        tecActComboBox.addItem("Seleccione");
                        actualizarUI();
                    }
                } else
                {
                    VentanaP.raiz = Multilistas.insertar(VentanaP.raiz, c, 0, etiqueta, aux1);
                    //SE CAMBIA EL HILO
                    nab.setHilo(null);
                    nab.setHilo(c);
                    tecActTextField.setText(tecDes);
                    System.out.println("Conector arriba: " + c.getArb().getEtiqueta());
                    tecDesComboBox.removeAllItems();
                    tecDesComboBox.addItem("Seleccione");
                    tecActComboBox.removeAllItems();
                    tecActComboBox.addItem("Seleccione");
                    actualizarUI();
                }
            }
            dataPanel(VentanaP.s[1].getObj());
            CtrlInterfaz.habilita(false, carreraComboBox);
            CtrlInterfaz.habilita(false, tecDesComboBox);
            CtrlInterfaz.habilita(false, cambiarButton);
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, " Error !!!\n" + " Intente de nuevo");
        }

    }//GEN-LAST:event_cambiarButtonActionPerformed

    private void tecDesComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tecDesComboBoxActionPerformed
    {//GEN-HEADEREND:event_tecDesComboBoxActionPerformed

    }//GEN-LAST:event_tecDesComboBoxActionPerformed

    private void cambiarButtonKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_cambiarButtonKeyPressed
    {//GEN-HEADEREND:event_cambiarButtonKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            cambiarButtonActionPerformed(null);
        }
    }//GEN-LAST:event_cambiarButtonKeyPressed

    private void tecActComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_tecActComboBoxItemStateChanged
    {//GEN-HEADEREND:event_tecActComboBoxItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            if (tecActComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione"))
            {
                carreraComboBox.removeAllItems();
                carreraComboBox.addItem("Seleccione");
                tecDesComboBox.removeAllItems();
                tecDesComboBox.addItem("Seleccione");
                actualizarComboTecDes();
                CtrlInterfaz.habilita(false, carreraComboBox);
                CtrlInterfaz.habilita(false, cambiarButton);

            } else
            {
                tecAct = tecActComboBox.getSelectedItem().toString();
                carreraComboBox.removeAllItems();
                carreraComboBox.addItem("Seleccione");
                UpdateUI(VentanaP.raiz, UpdateLabel(tecAct), 0);
                CtrlInterfaz.cambia(carreraComboBox);
            }
        }
    }//GEN-LAST:event_tecActComboBoxItemStateChanged

    private void carreraComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_carreraComboBoxItemStateChanged
    {//GEN-HEADEREND:event_carreraComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            if (carreraComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione"))
            {
                tecDesComboBox.removeAllItems();
                tecDesComboBox.addItem("Seleccione");
                actualizarComboTecDes();
                CtrlInterfaz.habilita(false, tecDesComboBox);
                CtrlInterfaz.habilita(false, cambiarButton);
            } else
            {
                CtrlInterfaz.cambia(tecDesComboBox);
            }
        }
    }//GEN-LAST:event_carreraComboBoxItemStateChanged

    private void tecDesComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_tecDesComboBoxItemStateChanged
    {//GEN-HEADEREND:event_tecDesComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            if (tecDesComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione") || tecDesComboBox.getSelectedItem().toString().equals(tecActComboBox.getSelectedItem().toString()))
            {
                CtrlInterfaz.habilita(false, cambiarButton);
            } else
            {
                tecDes = tecDesComboBox.getSelectedItem().toString();
                CtrlInterfaz.cambia(cambiarButton);
            }
        }
    }//GEN-LAST:event_tecDesComboBoxItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        VentanaP v = new VentanaP();
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void nomTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nomTextFieldActionPerformed
    {//GEN-HEADEREND:event_nomTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        VentanaP v = new VentanaP();
        v.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    public void UpdateUI(Nodo raiz, String[] etiqueta, int nivel)
    {
        if (nivel == etiqueta.length - 1)
        {
            Nodo aux = raiz;
            String s = "";
            while (aux != null)
            {
                s = aux.getEtiqueta();
                carreraComboBox.addItem(s);
                aux = aux.getSig();
            }
        } else
        {
            Nodo aux = busca(raiz, etiqueta[nivel]);
            if (aux == null)
            {
//                System.out.println("NO HAY REUNIONES");

            } else
            {
                UpdateUI(aux.getAbj(), etiqueta, nivel + 1);
            }
        }
//        GuardaArchivos.guardar(raiz, "Multilista.dat");
    }

    public String[] UpdateLabel(String s)
    {
        label[0] = s;
        label[1] = "";
        return label;
    }

    public String desp0(Nodo raiz, int nivel)
    {
        String s = "";
        if (raiz != null)
        {
            s = raiz.getEtiqueta();
            tecActComboBox.addItem(s);
            tecDesComboBox.addItem(s);
            desp0(raiz.getSig(), 0);
        }
        return s;
    }

    public void actualizarUI()
    {
        desp0(VentanaP.raiz, 0);
    }

    public void actualizarComboTecDes()
    {
        desp1(VentanaP.raiz, 0);
    }

    public String desp1(Nodo raiz, int nivel)
    {
        String s = "";
        if (raiz != null)
        {
            s = raiz.getEtiqueta();
            tecDesComboBox.addItem(s);
            desp1(raiz.getSig(), 0);
        }
        return s;
    }

    public void dataPanel(Object obj)
    {
        cvaTextField.setText(Integer.toString(((Carrera) obj).getCve()));
        nomTextField.setText(((Carrera) obj).getNombre());
        bossTextField.setText(((Carrera) obj).getJefe());
    }

//    public NodoArbol eliminaNodos(ArbolBinario ab, String etq, Nodo n, ArbolBinario a1)
//    {
//        NodoArbol aux = null;
//        NodoArbol[] arr = new NodoArbol[2];
//        arr[0] = null;
//        arr[1] = ab.getRaiz();
//        ab.elimina(etq, ab.getRaiz(), arr);
//        Nodo aux1 = arr[0].getHilo();
//        if (aux1.getArb().getEtiqueta().equals(n.getArb().getEtiqueta()))
//        {
//            aux = arr[0];
//            agregaNodos(a1, ab, etq);
//        } else
//        {
//            a1.setRaiz(a1.inserta(a1.getRaiz(), arr[0]));
//            return eliminaNodos(ab, etq, n, a1);
//        }
//        return aux;
//    }
//
//    public void agregaNodos(ArbolBinario ab, ArbolBinario ab1, String etq)
//    {
//        NodoArbol[] arr = new NodoArbol[2];
//        arr[0] = null;
//        arr[1] = ab.getRaiz();
//        while (arr[1] != null)
//        {
//            ab1.elimina(etq, ab1.getRaiz(), arr);
//            ab.setRaiz(ab.inserta(ab.getRaiz(), arr[0]));
//            ab.balancear(ab.getRaiz());
//        }
//    }
    public static Nodo buscar(Nodo raiz, int nivel, String[] etiqueta)
    {
        if (nivel == etiqueta.length - 1)
        {
            Nodo aux1 = busca(raiz, etiqueta[nivel]);
            if (aux1 != null)
            {
                System.out.println(aux1.getEtiqueta());
            }
            return aux1;
        } else
        {
            Nodo aux = busca(raiz, etiqueta[nivel]);
            if (aux == null)
            {
                System.out.println("No encontre el dato: " + etiqueta[nivel] + " del nivel " + nivel);
                return raiz;
            } else
            {

                return buscar(aux.getAbj(), nivel + 1, etiqueta);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Windows".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VentanaCambio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VentanaCambio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VentanaCambio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VentanaCambio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new VentanaCambio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bossLabel;
    private javax.swing.JTextField bossTextField;
    private javax.swing.JButton cambiarButton;
    public javax.swing.JComboBox<String> carreraComboBox;
    private javax.swing.JLabel cvaLabel;
    private javax.swing.JTextField cvaTextField;
    private javax.swing.JPanel dataPanel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nomLabel;
    private javax.swing.JTextField nomTextField;
    private javax.swing.JLabel nvoTecLabel;
    private javax.swing.JComboBox<String> tecActComboBox;
    private javax.swing.JTextField tecActTextField;
    private javax.swing.JLabel tecActualLabel;
    private javax.swing.JComboBox<String> tecDesComboBox;
    // End of variables declaration//GEN-END:variables
class FondoPanelg extends JPanel
    {

        private Image imagen;

        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondog.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    class FondoPanelp extends JPanel
    {

        private Image imagen;

        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondop.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
