package academia;

import arbolesylistas.GuardaArchivos;
import arbolesylistas.Multilistas;
import static arbolesylistas.Multilistas.busca;
import arbolesylistas.Nodo;
import arbolesylistas.Reunion;
import cjb.ci.CtrlInterfaz;
import cjb.ci.Validaciones;
import com.toedter.calendar.JDateChooser;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Daniel Alberto Hernandez Castrejon
 * @author Humberto Gonzalez Garduño
 * @author Oscar Lopez Fonseca
 */
public class VentanaReunion extends javax.swing.JFrame
{

    String label[] = new String[2];
    String reu = "";

    /**
     * Creates new form VentanaReunion
     */
    public VentanaReunion()
    {
        initComponents();
        actualizarUI();
        agregarPanel.setVisible(false);
        ((JTextField) this.fechaCalendar.getDateEditor()).setEditable(false);
        // UpdateUI(VentanaP.raiz, UpdateLabel(), 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new FondoPanelg();
        agregarPanel = new FondoPanelp();
        flioLabel = new javax.swing.JLabel();
        motLabel = new javax.swing.JLabel();
        fechaLabel = new javax.swing.JLabel();
        folTextField = new javax.swing.JTextField();
        motTextField = new javax.swing.JTextField();
        fechaCalendar = new com.toedter.calendar.JDateChooser();
        aceptarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        insComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        carComboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REUNIONES DE ACADEMIA");
        setBackground(new java.awt.Color(0, 102, 204));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));

        agregarPanel.setBackground(new java.awt.Color(51, 204, 255));

        flioLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        flioLabel.setForeground(new java.awt.Color(255, 255, 255));
        flioLabel.setText("FOLIO");

        motLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        motLabel.setForeground(new java.awt.Color(255, 255, 255));
        motLabel.setText("MOTIVO");

        fechaLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        fechaLabel.setForeground(new java.awt.Color(255, 255, 255));
        fechaLabel.setText("FECHA");

        folTextField.setEnabled(false);
        folTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                folTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                folTextFieldKeyTyped(evt);
            }
        });

        motTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                motTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                motTextFieldKeyTyped(evt);
            }
        });

        fechaCalendar.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                fechaCalendarMouseClicked(evt);
            }
        });
        fechaCalendar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                fechaCalendarKeyPressed(evt);
            }
        });

        aceptarButton.setBackground(new java.awt.Color(255, 255, 255));
        aceptarButton.setText("Aceptar");
        aceptarButton.setEnabled(false);
        aceptarButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aceptarButtonActionPerformed(evt);
            }
        });
        aceptarButton.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                aceptarButtonKeyPressed(evt);
            }
        });

        cancelarButton.setBackground(new java.awt.Color(255, 255, 255));
        cancelarButton.setText("Borrar Todo");
        cancelarButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelarButtonActionPerformed(evt);
            }
        });
        cancelarButton.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                cancelarButtonKeyPressed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("AGREGAR REUNIÓN");

        javax.swing.GroupLayout agregarPanelLayout = new javax.swing.GroupLayout(agregarPanel);
        agregarPanel.setLayout(agregarPanelLayout);
        agregarPanelLayout.setHorizontalGroup(
            agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agregarPanelLayout.createSequentialGroup()
                        .addComponent(fechaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fechaCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(agregarPanelLayout.createSequentialGroup()
                        .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(motLabel)
                            .addComponent(flioLabel))
                        .addGap(18, 18, 18)
                        .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(folTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(agregarPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(cancelarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aceptarButton)))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agregarPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(81, 81, 81))
        );
        agregarPanelLayout.setVerticalGroup(
            agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agregarPanelLayout.createSequentialGroup()
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agregarPanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(fechaLabel)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agregarPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fechaCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(motLabel)
                    .addComponent(motTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(folTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flioLabel))
                .addGap(18, 18, 18)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarButton)
                    .addComponent(aceptarButton))
                .addGap(110, 110, 110))
        );

        jLabel4.setText("Institucion");

        insComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        insComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                insComboBoxItemStateChanged(evt);
            }
        });

        jLabel5.setText("Carrera");

        carComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        carComboBox.setEnabled(false);
        carComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                carComboBoxItemStateChanged(evt);
            }
        });

        jButton1.setText("Atrás");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(insComboBox, 0, 177, Short.MAX_VALUE)
                            .addComponent(carComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(agregarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(agregarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void aceptarButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_aceptarButtonActionPerformed
    {//GEN-HEADEREND:event_aceptarButtonActionPerformed
        try
        {
            if (!folTextField.getText().isEmpty() && !motTextField.getText().isEmpty() && comprobarFecha())
            {

                Object objReu = new Reunion(Integer.parseInt(folTextField.getText()), motTextField.getText(), asignarFecha());
                Nodo reunion = new Nodo(objReu, folTextField.getText());
                String etiqueta[] = new String[3];
                etiqueta[0] = insComboBox.getSelectedItem().toString();
                etiqueta[1] = carComboBox.getSelectedItem().toString();
                etiqueta[2] = folTextField.getText();
                Nodo n1 = buscar(VentanaP.raiz, 0, etiqueta);
                Nodo ex = buscar(VentanaP.raiz, 0, etiqueta);
                if (n1 != null && ex != null)
                {
                    if (n1.getEtiqueta().equalsIgnoreCase(ex.getEtiqueta()))
                    {
                        JOptionPane.showMessageDialog(null, "Reunion ya resgistrada con el mismo folio");
                    } else
                    {
                        VentanaP.raiz = Multilistas.insertar(VentanaP.raiz, reunion, 0, etiqueta, null);
                        JOptionPane.showMessageDialog(null, "Reunion agregada");
                    }
                } else
                {
                    VentanaP.raiz = Multilistas.insertar(VentanaP.raiz, reunion, 0, etiqueta, null);
                    JOptionPane.showMessageDialog(null, "Reunion agregada");
                }

                folTextField.setText("");
                folTextField.requestFocus();
                motTextField.setText("");
                motTextField.requestFocus();
                ((JTextField) this.fechaCalendar.getDateEditor()).setText("");
                cambia(fechaCalendar);
                CtrlInterfaz.habilita(true, motTextField);
//                UpdateUI(VentanaP.raiz, etiqueta, 0);
            } else
            {
                //JOptionPane.showMessageDialog(null, " Error !!!\n" + " Intente de nuevo");
//                folTextField.setText("");
//                folTextField.requestFocus();
//                motTextField.setText("");
//                motTextField.requestFocus();
//                ((JTextField) this.fechaCalendar.getDateEditor()).setText("");
                cambia(fechaCalendar);
                CtrlInterfaz.habilita(true, motTextField);
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, " Error !!!\n" + " No puede dejar la fecha vacia");
            //motTextField.requestFocus();
            cambia(fechaCalendar);
        }
    }//GEN-LAST:event_aceptarButtonActionPerformed

    private void aceptarButtonKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_aceptarButtonKeyPressed
    {//GEN-HEADEREND:event_aceptarButtonKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            aceptarButtonActionPerformed(null);
        }
    }//GEN-LAST:event_aceptarButtonKeyPressed

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelarButtonActionPerformed
    {//GEN-HEADEREND:event_cancelarButtonActionPerformed
        fechaCalendar.requestFocus();
        ((JTextField) this.fechaCalendar.getDateEditor()).setText("");
        folTextField.setText("");
        CtrlInterfaz.habilita(false, folTextField);
        CtrlInterfaz.habilita(true, motTextField);
        CtrlInterfaz.habilita(false, aceptarButton);
        cambia(fechaCalendar);
        motTextField.setText("");
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void cancelarButtonKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_cancelarButtonKeyPressed
    {//GEN-HEADEREND:event_cancelarButtonKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            cancelarButtonActionPerformed(null);
        }
    }//GEN-LAST:event_cancelarButtonKeyPressed

    private void insComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_insComboBoxItemStateChanged
    {//GEN-HEADEREND:event_insComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            if (insComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione") || insComboBox.getSelectedItem().toString().equalsIgnoreCase(""))
            {
                JOptionPane.showMessageDialog(null, "Opcion Invalida");
                carComboBox.removeAllItems();
                carComboBox.addItem("Seleccione");
                carComboBox.setEnabled(false);
            } else
            {
                CtrlInterfaz.cambia(carComboBox);
                Nodo aux = Multilistas.busca(VentanaP.raiz, insComboBox.getSelectedItem().toString());
                carComboBox.removeAllItems();
                carComboBox.addItem("Seleccione");
                UpdateUI(VentanaP.raiz, UpdateLabel(aux.getEtiqueta()), 0);
            }
        }
    }//GEN-LAST:event_insComboBoxItemStateChanged

    private void carComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_carComboBoxItemStateChanged
    {//GEN-HEADEREND:event_carComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED)
        {
            if (carComboBox.getSelectedItem().toString().equalsIgnoreCase("Seleccione") || carComboBox.getSelectedItem().toString().equalsIgnoreCase(""))
            {
                //JOptionPane.showMessageDialog(null, "Opcion Invalida");
                agregarPanel.setVisible(false);
            } else
            {
                agregarPanel.setVisible(true);
            }
        }
    }//GEN-LAST:event_carComboBoxItemStateChanged

    private void motTextFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_motTextFieldKeyTyped
    {//GEN-HEADEREND:event_motTextFieldKeyTyped
        Validaciones.validaAlfabeticos(evt);
    }//GEN-LAST:event_motTextFieldKeyTyped

    private void motTextFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_motTextFieldKeyPressed
    {//GEN-HEADEREND:event_motTextFieldKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (validarCVacio(motTextField))
            {
                if (validaEspacio(motTextField))
                {
                    CtrlInterfaz.cambia(folTextField);
                    CtrlInterfaz.habilita(false, motTextField);
                } else
                {
                    motTextField.requestFocus();
                }
            } else
            {
                JOptionPane.showMessageDialog(this, "No puede dejar este campo vacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
                motTextField.requestFocus();
            }
        }
    }//GEN-LAST:event_motTextFieldKeyPressed

    private void fechaCalendarKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_fechaCalendarKeyPressed
    {//GEN-HEADEREND:event_fechaCalendarKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            CtrlInterfaz.cambia(motTextField);
        }
    }//GEN-LAST:event_fechaCalendarKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        VentanaP v = new VentanaP();
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void folTextFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_folTextFieldKeyTyped
    {//GEN-HEADEREND:event_folTextFieldKeyTyped
        //Validaciones.validaEntero(evt);
        Validaciones.validaEntero(evt, 5, folTextField.getText());
    }//GEN-LAST:event_folTextFieldKeyTyped

    private void folTextFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_folTextFieldKeyPressed
    {//GEN-HEADEREND:event_folTextFieldKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            if (validarCVacio(folTextField))
            {
                if (validarLongitud(5, folTextField))
                {
                    int opc = JOptionPane.showConfirmDialog(this, "¿ DESEA REALIZAR MODIFICACIONES ?", "ATENCION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (opc == JOptionPane.NO_OPTION)
                    {
                        CtrlInterfaz.cambia(aceptarButton);
                        CtrlInterfaz.habilita(false, folTextField);
                    } else
                    {
                        CtrlInterfaz.cambia(motTextField);
                        CtrlInterfaz.habilita(false, folTextField);
                    }
                } else
                {
                    JOptionPane.showMessageDialog(this, "El folio debe contener 5 digitos", "ATENCION", JOptionPane.WARNING_MESSAGE);
                }
            } else
            {
                JOptionPane.showMessageDialog(this, "No puede dejar este campo vacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
                folTextField.requestFocus();
            }
        }
    }//GEN-LAST:event_folTextFieldKeyPressed

    private void fechaCalendarMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_fechaCalendarMouseClicked
    {//GEN-HEADEREND:event_fechaCalendarMouseClicked

    }//GEN-LAST:event_fechaCalendarMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        VentanaP v = new VentanaP();
        v.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    public String asignarFecha()
    {
        String s = "";
        s = Integer.toString(fechaCalendar.getCalendar().get(Calendar.DAY_OF_MONTH)) + "/";
        s += Integer.toString(fechaCalendar.getCalendar().get(Calendar.MONTH) + 1) + "/";
        s += Integer.toString(fechaCalendar.getCalendar().get(Calendar.YEAR));
        return s;
    }

    public boolean comprobarFecha()
    {
        Calendar fecha1 = GregorianCalendar.getInstance();
        if (fechaCalendar.getDate().after(fecha1.getTime()))
        {
            asignarFecha();
            return true;
        } else
        {
            JOptionPane.showMessageDialog(this, "   Fecha invalida seleccione una fecha\n    posterior a la de hoy", "\tERROR", JOptionPane.ERROR_MESSAGE);
            cambia(fechaCalendar);
            System.out.println("Fecha en el jdatechooser");
            System.out.println(fechaCalendar.getDate().toString());
            System.out.println("Fecha actual");
            System.out.println(fecha1.getTime().toString());
            return false;
        }
    }

    public void UpdateUI(Nodo raiz, String[] etiqueta, int nivel)
    {
        if (nivel == etiqueta.length - 1)
        {
            Nodo aux = raiz;
            String s = "";
            while (aux != null)
            {
                s = aux.getEtiqueta();
                carComboBox.addItem(s);
                aux = aux.getSig();
            }
        } else
        {
            Nodo aux = busca(raiz, etiqueta[nivel]);
            if (aux == null)
            {
                System.out.println("NO HAY REUNIONES");
            } else
            {
//                if (nivel == etiqueta.length - 2)
//                {
//                    Object obj = aux.getObj();
//                    dataPanel(obj);
//                }
                UpdateUI(aux.getAbj(), etiqueta, nivel + 1);
            }
        }
//        GuardaArchivos.guardar(raiz, "Multilista.dat");
    }

//    public String[] UpdateLabel()
//    {
//        label[0] = VentanaP.tec;
//        label[1] = VentanaCarrera.car;
//        label[2] = "";
//        return label;
//    }
    public String[] UpdateLabel(String etq)
    {
        label[0] = etq;
        label[1] = "";
        return label;
    }

    public boolean validarCVacio(JTextField textField)
    {
        if (textField.getText().isEmpty())
        {
            return false;
        } else
        {
            return true;
        }
    }

    public boolean validarLongitud(int len, JTextField textField)
    {
        if (textField.getText().length() < len)
        {
            return false;
        } else
        {
            return true;
        }
    }

    public boolean validaEspacio(JTextField jtextfield)
    {
        char arr[] = jtextfield.getText().toCharArray();
        int cont = -1;
        char b = ' ';
        int i = 0;
        if (jtextfield.getText().charAt(0) == b)
        {
            JOptionPane.showMessageDialog(this, "No puede inicar con espacio o dejar solo el espacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
            return false;
        } else
        {
            do
            {
                if (arr[i] == b)
                {
                    cont += 1;
                    if (i == arr.length - 1)
                    {
                        if (arr[i] == b)
                        {
                            JOptionPane.showMessageDialog(this, "No puede terminar con un espacio", "ATENCION", JOptionPane.WARNING_MESSAGE);
                            return false;
                        }
                    }
                    if (cont == 1)
                    {
                        JOptionPane.showMessageDialog(this, "No puede tener mas de 1 espacio antes de otra palabra", "ATENCION", JOptionPane.WARNING_MESSAGE);
                        return false;
                    }
                } else
                {
                    cont = -1;
                }
                i++;
            } while (i < arr.length);
            return true;
        }
    }

//    public void dataPanel(Object obj)
//    {
//        claveTextField.setText(Integer.toString(((Carrera) obj).getCve()));
//        nomTextField.setText(((Carrera) obj).getNombre());
//        jefeTextField.setText(((Carrera) obj).getJefe());
//    }
    public static Nodo buscar(Nodo raiz, int nivel, String[] etiqueta)
    {
        if (nivel == etiqueta.length - 1)
        {
            Nodo aux1 = busca(raiz, etiqueta[nivel]);
            if (aux1 != null)
            {
                System.out.println(aux1.getEtiqueta());
            }
            return aux1;
        } else
        {
            Nodo aux = busca(raiz, etiqueta[nivel]);
            if (aux == null)
            {
                System.out.println("No encontre el dato: " + etiqueta[nivel] + " del nivel " + nivel);
                return raiz;
            } else
            {

                return buscar(aux.getAbj(), nivel + 1, etiqueta);
            }
        }
    }

    public String desp0(Nodo raiz, int nivel)
    {
        String s = "";
        if (raiz != null)
        {
            s = raiz.getEtiqueta();
            insComboBox.addItem(s);
            desp0(raiz.getSig(), 0);
        }
        return s;
    }

    public void actualizarUI()
    {
        GuardaArchivos.guardar(VentanaP.raiz, "Multilista.dat");
        desp0(VentanaP.raiz, 0);

    }

    public static void cambia(Object obj)
    {
        habilita(true, obj);
        if (obj instanceof JDateChooser)
        {
            ((JDateChooser) obj).requestFocus();
        }
    }

    public static void habilita(boolean b, Object obj)
    {

        if (obj instanceof JDateChooser)
        {
            ((JDateChooser) obj).setEnabled(b);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Windows".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VentanaReunion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VentanaReunion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VentanaReunion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VentanaReunion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new VentanaReunion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JPanel agregarPanel;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JComboBox<String> carComboBox;
    private com.toedter.calendar.JDateChooser fechaCalendar;
    private javax.swing.JLabel fechaLabel;
    private javax.swing.JLabel flioLabel;
    private javax.swing.JTextField folTextField;
    private javax.swing.JComboBox<String> insComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel motLabel;
    private javax.swing.JTextField motTextField;
    // End of variables declaration//GEN-END:variables
class FondoPanelg extends JPanel
    {

        private Image imagen;

        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondog.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    class FondoPanelp extends JPanel
    {

        private Image imagen;

        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondop.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
